TRACE DATA API
==============

The trace data collection server will expose a simple REST API.
Base API end-point: http://berkeleytelematics.com/api/

Authentication of user credentials
**********************************
API End point - http://berkeleytelematics.com/api/auth/
The API end-point will accept data POSTed to it. It will expect five mandatory parameters:
key - For security. The api key is calculated as md5(secret key + user name) where the secret key is "fswehw7et912ur2rf7#Y@^nfhfbqwme34f&HB&T24gvdkk" without the quotes
username: The username that was used to register on the website at http://berkeleytelematics.com/accounts/create
password: The password provided during registration
identifier: The unique identifier of the phone
platform: Integer value which represents the phone platform (iPhone - 1, Android - 11, Windows - 21)

For now, the authentication credentials are POSTed in plain text, which is not secure, but, we can change it to use an https connection before rolling it out to larger audience.

Response
--------
Success response:
<?xml version="1.0" encoding="utf-8"?>
<response>
	<code>1</code>
	<userid>1</userid>
	<email>thejo@berkeley.edu</email>
	<first_name>Thejo</first_name>
	<last_name>Kote</last_name>
</response>

Note: The first name and last name nodes may be empty.

Error response:
<?xml version="1.0" encoding="utf-8"?>
<response>
	<code>0</code>
	<message>Password is incorrect</message>
</response>

The message will change based on the error.

Response when user is already logged in on a different phone:
<?xml version="1.0" encoding="utf-8"?>
<response>
	<code>2</code>
	<message>Your account is associated with a different phone. Would you like to associate it with this phone instead?</message>
</response>

Show the message to the user and provide a Yes / No option. If the selects yes, make another POST request which is the same as the original request in every way except for the addition of another parameter.
The parameter to be added is:
change_phone: The value should be 1.

Exit from the application if the user selects No.


Addition of trace Data to the server
************************************
API End point - http://berkeleytelematics.com/api/location/
The API end-point will accept trace data POSTed to it. It will expect four mandatory parameters:
key - For security. The api key is calculated as md5(secret key + user name) where the secret key is "fswehw7et912ur2rf7#Y@^nfhfbqwme34f&HB&T24gvdkk" without the quotes
trace_data - the trace data in CSV format (one sample on each line)
username - The username of the logged in user.
identifier - The unique identifier of the phone.

Non-mandatory parameter:
state_machine_data - If android state machine data is being uploaded, set this parameter with any value.

Example for trace_data parameter:
<sample 1>
<sample 2>

The expected order for the sample data for iPhones is -
lat, lon, gps_time, sample_time, velocity, haccuracy, altitude, course, service_provider, travel_mode, gps_sample_period, battery_level

The expected order for the state machine data for Android phones is -
sample_time, lat, lon, data in key value pairs separated by a semi colon (no commas)

IMPORTANT: All values are mandatory. If any values are not available (like battery level), replace it with a zero.
For units corresponding to each data point, refer to the DB schema. Use 0 and 1 for boolean values.

Multiple samples
----------------
The API will accept multiple sample data points at once. In that case, data for each sample should be separated by a line feed character '\n'. Please note this when making API calls from iOS and Windows based devices.
For example, if the application on the phone is sampling data every 30 seconds, and uploading it every 5 minutes, the application will POST 10 lines to the API end point.

Response
--------
Once the API receives the data, it will respond with the status. You can add a get parameter to the API end point specifying the format of the response (XML and JSON are supported). For example - 
http://berkeleytelematics.com/api/create/?format=xml

Success response:
<?xml version="1.0" encoding="utf-8"?>
<response>
	<code>1</code>
	<message>Success</message>
        <sleep_time>60-360,1260-1380</sleep_time>
</response>

Error response:
<?xml version="1.0" encoding="utf-8"?>
<response>
	<code>0</code>
	<message>Key is invalid (or other appropriate error message)</message>
</response>

Response when the phone is no longer associated with the user account:

If the user has logged into their account from a different phone and associated the new phone with the account, we don't want the old phone to continue uploading data to the server. The first time the old phone tries to upload location data to the server, it will receive this response:
<response>
	<code>2</code>
	<message>This phone is no longer associated with the username <username></message>
</response>

If error code 2 is received, stop all expensive operations (location and other sensors, network calls etc.) and let the OS kill the process when it wants to.


Application lifecycle events
****************************
API End point - http://berkeleytelematics.com/api/lifecycle/
The API end-point will accept data POSTed to it. It will expect four mandatory parameters:
key - For security. The api key is calculated as md5(secret key + user name) where the secret key is "fswehw7et912ur2rf7#Y@^nfhfbqwme34f&HB&T24gvdkk" without the quotes
event_data - the trace data in CSV format (one sample on each line)
username - The username of the logged in user.
identifier - The unique identifier of the phone.

Example for event_data parameter:
<sample 1>
<sample 2>

The expected order for the sample data is -
event type(1 for start and 0 for stop), event timestamp (milliseconds),lat, lon, accuracy, last fix time (millseconds)

Only the first two parameters are mandatory. The location details may be included if they are available.

